image: java:8

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

stages:
  - test
  - build
  - deploy

variables:
  CONTAINER_TEST_IMAGE: "registry.gitlab.com/age-agh/age3:$CI_BUILD_REF_NAME"
  CONTAINER_RELEASE_IMAGE: "registry.gitlab.com/age-agh/age3:node-latest"

cache:
  key: "$CI_BUILD_REF_NAME"
  untracked: true
  paths:
    - .gradle/wrapper
    - .gradle/caches

test_age:
  stage: test
  script:
    - ./gradlew -PnexusUrl=$DEPLOY_URL -PnexusUsername=$DEPLOY_USERNAME -PnexusPassword=$DEPLOY_PASSWORD test
  tags:
    - java

deploy_age_snapshot:
  stage: deploy
  only:
    - develop
  script:
    - ./gradlew -PnexusUrl=$DEPLOY_URL -PnexusUsername=$DEPLOY_USERNAME -PnexusPassword=$DEPLOY_PASSWORD publish
  tags:
    - java

deploy_age_javadocs:
  before_script:
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - 'which ssh-agent || ( apk --update add openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  stage: deploy
  allow_failure: true
  only:
    - develop
  script:
    - ./gradlew -PnexusUrl=$DEPLOY_URL -PnexusUsername=$DEPLOY_USERNAME -PnexusPassword=$DEPLOY_PASSWORD alljavadoc
    - scp -r build/docs/javadoc/ $DOCS_URL:javadocs/age3/develop
  tags:
    - java

trigger_build:
    stage: deploy
    script:
      - "curl -X POST -F token=${DOCS_TRIGGER_TOKEN} -F ref=master https://gitlab.com/api/v3/projects/2333621/trigger/builds"

build_core_jar:
  stage: build
  only:
    - develop
    - /^release\/.*$/
  tags:
    - java
  script:
    - ./gradlew -PnexusUrl=$DEPLOY_URL -PnexusUsername=$DEPLOY_USERNAME -PnexusPassword=$DEPLOY_PASSWORD age3-core:shadowJar
  artifacts:
    paths:
      - age3-core/build/libs/age3-core.jar

build_docker:
  stage: deploy
  image: docker:latest
  only:
    - develop
  services:
    - docker:dind
  tags:
    - docker
  dependencies:
    - build_core_jar
  script:
    - cp age3-core/build/libs/age3-core.jar docker/age3-core.jar
    - cd docker
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

build_docker_release:
  stage: deploy
  image: docker:latest
  only:
    - /^release\/.*$/
  services:
    - docker:dind
  tags:
    - docker
  dependencies:
    - build_core_jar
  script:
    - cp age3-core/build/libs/age3-core.jar docker/age3-core.jar
    - cd docker
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build --pull -t $CONTAINER_RELEASE_IMAGE .
    - docker push $CONTAINER_RELEASE_IMAGE
