/*
 * Copyright (C) 2016 Intelligent Information Systems Group.
 *
 * This file is part of AgE.
 *
 * AgE is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * AgE is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with AgE.  If not, see <http://www.gnu.org/licenses/>.
 */

buildscript {
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath 'ch.raffael.pegdown-doclet:pegdown-doclet:1.3'
		classpath 'net.researchgate:gradle-release:2.4.1'
	}
}

plugins {
	id 'net.ltgt.errorprone' version '0.0.8'
}

allprojects {
	group 'pl.edu.agh.age'
	version '0.3.1'
	apply plugin: 'maven-publish'
	apply plugin: 'ch.raffael.pegdown-doclet'
	apply plugin: 'net.researchgate.release'

	repositories {
		mavenCentral()
	}

	release {
		git {
			requireBranch = 'release/[0-9.]+'
		}
	}

	publishing {
		repositories {
			maven {
				if (project.version.endsWith('-SNAPSHOT')) {
					url "${nexusUrl}/repository/maven-snapshots"
				} else {
					url "${nexusUrl}/repository/maven-releases"
				}
				credentials {
					username = nexusUsername
					password = nexusPassword
				}
			}
		}
	}
}

// Mock so gradle-release stop complaining
task build() {

}

subprojects {
	apply plugin: 'java'

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	configurations {
		checkerFrameworkAnnotatedJDK
		checkerFramework
	}

	publishing {
		publications {
			mavenJava(MavenPublication) {
				from components.java
			}
		}
	}

	dependencies {
		compile 'javax.inject:javax.inject:1'
		compile 'org.slf4j:slf4j-api:1.7.21'
		compile 'org.slf4j:jcl-over-slf4j:1.7.21'
		compile 'com.google.code.findbugs:jsr305:3.0.1'
		compile 'io.javaslang:javaslang:2.0.5'
		compile 'org.apache.commons:commons-lang3:3.5'
		compile 'com.google.guava:guava:20.0'

		runtime 'org.codehaus.groovy:groovy:2.4.7'
		compile 'ch.qos.logback:logback-classic:1.1.7'
		compile 'org.logback-extensions:logback-ext-spring:0.1.4'

		testCompile 'junit:junit:4.12'
		testCompile 'org.mockito:mockito-all:2.0.2-beta'
		testCompile 'org.assertj:assertj-core:3.6.1'

		checkerFrameworkAnnotatedJDK 'org.checkerframework:jdk8:2.1.5'
		checkerFramework 'org.checkerframework:checker:2.1.5'
		compile 'org.checkerframework:checker-qual:2.1.5'
	}

	if (project.hasProperty('withChecker')) {
		println('Compiling with checker framework')
		tasks.withType(JavaCompile).all { JavaCompile compile ->
			compile.options.compilerArgs = [
				'-processor', 'org.checkerframework.checker.nullness.NullnessChecker',
				'-processorpath', "${configurations.checkerFramework.asPath}",
				// uncomment to turn Checker Framework errors into warnings
				// '-Awarns',
				'-AassumeAssertionsAreEnabled',
				'-Astubs=checkerframework/stubs',
				"-Xbootclasspath/p:${configurations.checkerFrameworkAnnotatedJDK.asPath}"
			]
		}
	}
}

def exportedProjects = [
	":age3-console",
	":age3-core",
	":age3-examples",
	":age3-stream-agents",
]

task alljavadoc(type: Javadoc, group: "Documentation") {
	description = 'Generates a global javadoc from all the modules'
	source exportedProjects.collect { project(it).sourceSets.main.allJava }
	classpath = files(exportedProjects.collect { project(it).sourceSets.main.compileClasspath })
	options.memberLevel = JavadocMemberLevel.PRIVATE
	options.links 'http://docs.oracle.com/javase/8/docs/api/'
	options.links 'http://docs.spring.io/spring/docs/current/javadoc-api/'
	options.links 'https://google.github.io/guava/releases/snapshot/api/docs/'
	options.links 'http://docs.hazelcast.org/docs/3.7/javadoc/'
	options.tags = ['apiNote:a:API Note:', 'implSpec:a:Implementation Requirements:', 'implNote:a:Implementation Note:']
	destinationDir = file("${buildDir}/docs/javadoc")
}


