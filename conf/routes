GET         /                                controllers.UiController.index()

###
#  summary: get cookie with token
#  responses:
#    200:
#      description: success
###
GET         /api/hello                       controllers.PullingController.hello()

###
#  summary: get active clusters
#  responses:
#    200:
#      description: success
#      schema:
#       $ref: '#/definitions/Seq[model.domain.Cluster]'
###
GET         /api/clusters                      controllers.ClustersController.getActiveClusters()

###
#  summary: get graph of current age cluster
#  responses:
#    200:
#      description: success
#      schema:
#       $ref: '#/definitions/model.domain.nodeGraph.Graph'
#
###
GET         /api/graph/:alias                controllers.GraphController.getGraph(alias: String)

###
#  summary: get state of cluster
#  responses:
#    200:
#      description: success
#      schema:
#       $ref: '#/definitions/model.domain.GlobalState'
#
###
GET         /api/global-state/:alias         controllers.GraphController.getGlobalState(alias: String)


###
#  summary: get statuses of pulling workers by cluster alias
#  responses:
#    200:
#      description: success
#      schema:
#       $ref: '#/definitions/Seq[model.domain.PullerInfo]'
###
GET         /api/pull/statuses/:alias        controllers.ClustersController.getStatuses(alias: String)

###
#  summary: start pulling
#  parameters:
#   - name: body
#     schema:
#       $ref: '#/definitions/controllers.ClustersController.StartRequest'
#  responses:
#    200:
#      description: success
###
POST        /api/pull/start                  controllers.ClustersController.startPulling()


###
#  summary: stop pulling of a worker identified by address and cluster alias
#  parameters:
#   - name: body
#     schema:
#       $ref: '#/definitions/actors.ClustersSupervisor.Stop'
#  responses:
#    200:
#      description: success
###
POST        /api/pull/stop                   controllers.ClustersController.stopPuller()

###
#  summary: update pulling interval of a given worker in a cluster
#  parameters:
#   - name: body
#     schema:
#       $ref: '#/definitions/actors.ClustersSupervisor.UpdateInterval'
#  responses:
#    200:
#      description: success
###
POST        /api/pull/update                 controllers.ClustersController.changeInterval()

###
#  summary: check if given adress is valid
#  parameters:
#   - name: body
#     schema:
#       $ref: '#/definitions/controllers.PullingRequest'
#  responses:
#    200:
#      description: success
#    400:
#      description: bad adress
###
POST        /api/pull/verify                 controllers.PullingController.verify()


### NoDocs ###
GET         /docs/swagger-ui/*file           controllers.Assets.at(path:String="/public/lib/swagger-ui", file:String)

### NoDocs ###
GET         /*file                           controllers.UiController.assetOrDefault(file)


###
###
GET         /api/clusters                     controllers.ClustersController.getActiveClusters()




